var documenterSearchIndex = {"docs":
[{"location":"double_pendulum/#Double-Pendulum","page":"Double Pendulum","title":"Double Pendulum","text":"","category":"section"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"The double pendulum consists of two pendula, one attached to the origin at (xy) = (00), and the second attached to the first. Each pendulum consists of a point mass m_i attached to a massless rod of length l_i with i in (12). All motion is assumed to be frictionless.","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"HTML(\"\"\"<object type=\"image/svg+xml\" class=\"display-light-only\" data=$(joinpath(Main.buildpath, \"images/double-pendulum.png\"))></object>\"\"\") # hide","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"HTML(\"\"\"<object type=\"image/svg+xml\" class=\"display-dark-only\" data=$(joinpath(Main.buildpath, \"images/double-pendulum_dark.png\"))></object>\"\"\") # hide","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"The dynamics of the system is most naturally described in terms of the angles theta_i between the rods l_i and the vertical axis y. In terms of these angles, the cartesian coordinates are given by","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"beginalign*\nx_1 = l_1 sintheta_1  \nx_2 = l_1 sintheta_1 + l_2 sintheta_2  \ny_1 = - l_1 costheta_1  \ny_2 = -l_1 costheta_1 - l_2 costheta_2 \nendalign*","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"In terms of the generalized coordinates theta_i, the Lagrangian reads","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"beginalign*\nL (theta_1 theta_2 dottheta_1 dottheta_2)\n = frac12 (m_1 + m_2) l_1^2 dottheta_1^2 \n + frac12 m_2 l_2^2 dottheta_2^2\n + m_2 l_1 l_2 dottheta_1 dottheta_2 cos(theta_1 - theta_2) \n + g (m_1 + m_2) l_1 costheta_1\n + g m_2 l_2 costheta_2 \nendalign*","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"The canonical conjugate momenta p_i are obtained from the Lagrangian as","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"beginalign*\np_1 = fracpartial Lpartial dottheta_1 = (m_1 + m_2) l_1^2 dottheta_1 + m_2 l_1 l_2 dottheta_2 cos(theta_1 - theta_2) \np_2 = fracpartial Lpartial dottheta_2 = m_2 l_2^2 dottheta_2 + m_2 l_1 l_2 dottheta_1 cos(theta_1 - theta_2) \nendalign*","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"After solving these relations for the generalized velocities dottheta_i,","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"beginalign*\ndottheta_1 = fracl_2 p_theta_1 - l_1 p_theta_2 cos(theta_1 - theta_2)l_1^2 l_2 left m_1 + m_2 sin^2(theta_1 - theta_2) right  \ndottheta_2 = frac(m_1 + m_2) l_1 p_theta_2 - m_2 l_2 p_theta_1 cos(theta_1 - theta_2)m_2 l_1 l_2^2 left m_1 + m_2 sin^2 (theta_1 - theta_2) right  \nendalign*","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"the Hamiltonian can be obtained via the Legendre transform,","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"H = sum_i=1^2 dottheta_i p_i - L ","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"as","category":"page"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"beginalign*\nH = fracm_2 l_2^2 p^2_theta_1 + (m_1 + m_2) l_1^2 p^2_theta_2 - 2 m_2 l_1 l_2 p_theta_1 p_theta_2 cos(theta_1 - theta_2)2 m_2 l_1^2 l_2^2 left m_1 + m_2 sin^2(theta_1 - theta_2) right  \n   qquadqquad vphantomfracll - g (m_1 + m_2) l_1 costheta_1 - g m_2 l_2 costheta_2 \nendalign*","category":"page"},{"location":"double_pendulum/#Library-functions","page":"Double Pendulum","title":"Library functions","text":"","category":"section"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"GeometricProblems.DoublePendulum","category":"page"},{"location":"double_pendulum/#GeometricProblems.DoublePendulum","page":"Double Pendulum","title":"GeometricProblems.DoublePendulum","text":"DoublePendulum\n\nThe DoublePendulum module provides functions hodeproblem and lodeproblem each returning a Hamiltonian or Lagrangian problem, respectively, to be solved in the GeometricIntegrators.jl ecosystem. The actual code is generated with EulerLagrange.jl.\n\nThe double pendulum consists of two pendula, one attached to the origin at (xy) = (00), and the second attached to the first. Each pendulum consists of a point mass m_i attached to a massless rod of length l_i with i in (12). The dynamics of the system is described in terms of the angles theta_i between the rods l_i and the vertical axis y. All motion is assumed to be frictionless.\n\nSystem parameters:\n\nl₁: length of rod 1\nl₂: length of rod 2\nm₁: mass of pendulum 1\nm₂: mass of pendulum 2\ng: gravitational constant\n\n\n\n\n\n","category":"module"},{"location":"double_pendulum/","page":"Double Pendulum","title":"Double Pendulum","text":"Modules = [GeometricProblems.DoublePendulum]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"double_pendulum/#GeometricProblems.DoublePendulum.hodeproblem","page":"Double Pendulum","title":"GeometricProblems.DoublePendulum.hodeproblem","text":"Hamiltonian problem for the double pendulum\n\nConstructor with default arguments:\n\nhodeproblem(\n    q₀ = [π/4, π/2],\n    p₀ = [3.3321622036187746, 7.0685834705770345];\n    tspan = (0.0, 10.0),\n    tstep = 0.01,\n    params = (l₁ = 2.0, l₂ = 3.0, m₁ = 1.0, m₂ = 2.0, g = 9.80665)\n)\n\n\n\n\n\n","category":"function"},{"location":"double_pendulum/#GeometricProblems.DoublePendulum.lodeproblem","page":"Double Pendulum","title":"GeometricProblems.DoublePendulum.lodeproblem","text":"Lagrangian problem for the double pendulum\n\nConstructor with default arguments:\n\nlodeproblem(\n    q₀ = [π/4, π/2],\n    p₀ = [3.3321622036187746, 7.0685834705770345];\n    tspan = (0.0, 10.0),\n    tstep = 0.01,\n    params = (l₁ = 2.0, l₂ = 3.0, m₁ = 1.0, m₂ = 2.0, g = 9.80665)\n)\n\n\n\n\n\n","category":"function"},{"location":"coupled_harmonic_oscillator/#Coupled-Harmonic-Oscillator","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"","category":"section"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"This system describes two harmonic oscillators that are coupled nonlinearly. ","category":"page"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"HTML(\"\"\"<object type=\"image/svg+xml\" class=\"display-light-only\" data=$(joinpath(Main.buildpath, \"images/coupled_harmonic_oscillator.png\"))></object>\"\"\") # hide","category":"page"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"HTML(\"\"\"<object type=\"image/svg+xml\" class=\"display-dark-only\" data=$(joinpath(Main.buildpath, \"images/coupled_harmonic_oscillator_dark.png\"))></object>\"\"\") # hide","category":"page"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"The following shows the q_1 component of the system for different values of k: ","category":"page"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"using GeometricIntegrators: integrate, ImplicitMidpoint \nusing GeometricProblems.CoupledHarmonicOscillator: hodeproblem, default_parameters\nusing Plots \n \nconst m₁ = default_parameters.m₁  \nconst m₂ = default_parameters.m₂ \nconst k₁ = default_parameters.k₁ \nconst k₂ = default_parameters.k₂ \nconst k = [0.0, 0.5, 0.75, 1.0, 2.0, 3.0, 4.0] \n \nparams_collection = [(m₁ = m₁, m₂ = m₂, k₁ = k₁, k₂ = k₂, k = k_val) for k_val in k] \nproblems = [hodeproblem(; params = params_collection[i]) for i in axes(k, 1)] \nensemble_solution = [integrate(problem, ImplicitMidpoint()) for problem in problems]\n \nt = ensemble_solution[1].t\n\nq₁ = zeros(1, length(t), length(k))\n\nfor index in axes(k, 1)\n    q₁[1, :, index] =  ensemble_solution[index].q[:, 1]\nend\n\nn_param_sets = length(params_collection) #hide \nlabels = reshape([\"k = \"*string(params.k) for params in params_collection], 1, n_param_sets) \n \nq₁ = q₁[1, :, :]\nconst one_plot = false \nconst psize = (900, 600) \nplot_q₁ = one_plot ? plot(0.0:0.4:100.0, q₁, size=psize) : plot(0.0:0.4:100.0, q₁, layout=(n_param_sets, 1), size=psize, label=labels, legend=:topright)\n\npng(plot_q₁, \"q_component\")\n\nnothing","category":"page"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"(Image: )","category":"page"},{"location":"coupled_harmonic_oscillator/#Library-functions","page":"Coupled Harmonic Oscillator","title":"Library functions","text":"","category":"section"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"GeometricProblems.CoupledHarmonicOscillator","category":"page"},{"location":"coupled_harmonic_oscillator/#GeometricProblems.CoupledHarmonicOscillator","page":"Coupled Harmonic Oscillator","title":"GeometricProblems.CoupledHarmonicOscillator","text":"CoupledHarmonicOscillator\n\nThe CoupledHarmonicOscillator module provides functions hodeproblem and lodeproblem each returning a Hamiltonian or Lagrangian problem, respectively, to be solved in the GeometricIntegrators.jl ecosystem. The actual code is generated with EulerLagrange.jl.\n\nThe coupled harmonic oscillator is a collection of two point masses that are connected to a fixed wall with spring constants k_1 and k_2 and are furthermore coupled nonlinearly resulting in the Hamiltonian: \n\nH(q_1 q_2 p_1 p_2) = fracq_1^22m_1 + fracq_2^22m_2 + k_1fracq_1^22 + k_2fracq_2^22 +  ksigma(q_1)frac(q_2 - q_1)^22\n\nwhere sigma(x) = 1  (1 + e^-x) is the sigmoid activation function. \n\nSystem parameters:\n\nk₁: spring constant of mass 1\nk₂: spring constant of mass 2\nm₁: mass 1\nm₂: mass 2\nk: coupling strength between the two masses. \n\n\n\n\n\n","category":"module"},{"location":"coupled_harmonic_oscillator/","page":"Coupled Harmonic Oscillator","title":"Coupled Harmonic Oscillator","text":"Modules = [GeometricProblems.CoupledHarmonicOscillator]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"coupled_harmonic_oscillator/#GeometricProblems.CoupledHarmonicOscillator.hodeproblem","page":"Coupled Harmonic Oscillator","title":"GeometricProblems.CoupledHarmonicOscillator.hodeproblem","text":"Hamiltonian problem for coupled oscillator\n\nConstructor with default arguments:\n\nhodeproblem(\n    q₀ = [1.0, 0.0],\n    p₀ = [2.0, 0.0];\n    tspan = (0.0, 100.0),\n    tstep = 0.4,\n    params = (m₁ = 2.0, m₂ = 1.0, k₁ = 1.5, k₂ = 0.3, k = 1.0)\n)\n\n\n\n\n\n","category":"function"},{"location":"coupled_harmonic_oscillator/#GeometricProblems.CoupledHarmonicOscillator.lodeproblem","page":"Coupled Harmonic Oscillator","title":"GeometricProblems.CoupledHarmonicOscillator.lodeproblem","text":"Lagrangian problem for the coupled oscillator\n\nConstructor with default arguments:\n\nlodeproblem(\n    q₀ = [1.0, 0.0],\n    p₀ = [2.0, 0.0];\n    tspan = (0.0, 100.0),\n    tstep = 0.4,\n    params = (m₁ = 2.0, m₂ = 1.0, k₁ = 1.5, k₂ = 0.3, k = 1.0)\n)\n\n\n\n\n\n","category":"function"},{"location":"abc_flow/#ABC-Flow","page":"ABC Flow","title":"ABC Flow","text":"","category":"section"},{"location":"abc_flow/","page":"ABC Flow","title":"ABC Flow","text":"The ABC flow (see [1]) is described by a divergence-free differential equation whose flow strongly depends on the initial condition. ","category":"page"},{"location":"abc_flow/","page":"ABC Flow","title":"ABC Flow","text":"using GeometricIntegrators: integrate, ImplicitMidpoint\nusing GeometricProblems.ABCFlow\nusing Plots\n\nensemble_solution = integrate(odeensemble(), ImplicitMidpoint())\n\np = plot()\nfor solution in ensemble_solution\n    plot!(p, solution.q[:, 1], solution.q[:, 2], solution.q[:, 3])\nend\np","category":"page"},{"location":"abc_flow/#Library-functions","page":"ABC Flow","title":"Library functions","text":"","category":"section"},{"location":"abc_flow/","page":"ABC Flow","title":"ABC Flow","text":"GeometricProblems.ABCFlow","category":"page"},{"location":"abc_flow/#GeometricProblems.ABCFlow","page":"ABC Flow","title":"GeometricProblems.ABCFlow","text":"ABC Flow\n\nbeginaligned\n    dotx = Asin(z) + Ccos(y) \n    doty = Bsin(x) + Acos(z)  \n    dotz = Csin(y) + Bcos(x)\nendaligned\n\n\n\n\n\n","category":"module"},{"location":"abc_flow/","page":"ABC Flow","title":"ABC Flow","text":"Modules = [GeometricProblems.ABCFlow]\nOrder = [:constant, :type, :macro, :function]","category":"page"},{"location":"abc_flow/","page":"ABC Flow","title":"ABC Flow","text":"E. Hairer, C. Lubich and G. Wanner. Geometric Numerical integration: structure-preserving algorithms for ordinary differential equations (Springer, Berlin, 2006).\n\n\n\n","category":"page"},{"location":"lotka_volterra_4d/#Lotka-Volterra-4d","page":"Lotka-Volterra 4d","title":"Lotka-Volterra 4d","text":"","category":"section"},{"location":"lotka_volterra_4d/","page":"Lotka-Volterra 4d","title":"Lotka-Volterra 4d","text":"Modules = [GeometricProblems.LotkaVolterra4d]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"massless_charged_particle/#Massless-Charged-Particle","page":"Massless Charged Particle","title":"Massless Charged Particle","text":"","category":"section"},{"location":"massless_charged_particle/","page":"Massless Charged Particle","title":"Massless Charged Particle","text":"GeometricProblems.MasslessChargedParticle","category":"page"},{"location":"massless_charged_particle/#GeometricProblems.MasslessChargedParticle","page":"Massless Charged Particle","title":"GeometricProblems.MasslessChargedParticle","text":"Massless charged particle in 2D\n\nThe Lagrangian is given by\n\nL(x dotx) = A(x) cdot dotx - phi (x) \n\nwith magnetic vector potential\n\nA(x) = fracA_02 big( 1 + x_1^2 + x_2^2 big) beginpmatrix\n- x_2 \n+ x_1 \nendpmatrix \n\nelectrostatic potential\n\nphi(x) =  E_0  big( cos (x_1) + sin(x_2) big) \n\nand magnetic and electric fields\n\nbeginaligned\nB(x) = nabla times A(x) = A_0  (1 + 2 x_1^2 + 2 x_2^2)  \nE(x) = - nabla phi(x) = E_0  big( sin x_1  - cos x_2 big)^T \nendaligned\n\nThe Hamiltonian form of the equations of motion reads\n\ndotx = frac1B(x) beginpmatrix\nhphantom- 0  + 1 \n- 1  hphantom+ 0 \nendpmatrix nabla phi (x) \n\n\n\n\n\n","category":"module"},{"location":"massless_charged_particle/","page":"Massless Charged Particle","title":"Massless Charged Particle","text":"using Plots\nusing GeometricIntegrators\nusing GeometricProblems.MasslessChargedParticle\nusing GeometricProblems.MasslessChargedParticlePlots\n\node = odeproblem()\nsol = integrate(ode, Gauss(1))\n\nplot_massless_charged_particle(sol, ode)\nsavefig(\"massless_charged_particle.svg\")\n\nnothing","category":"page"},{"location":"massless_charged_particle/","page":"Massless Charged Particle","title":"Massless Charged Particle","text":"(Image: )","category":"page"},{"location":"massless_charged_particle/","page":"Massless Charged Particle","title":"Massless Charged Particle","text":"Modules = [GeometricProblems.MasslessChargedParticle]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"massless_charged_particle/#GeometricProblems.MasslessChargedParticle.idaeproblem","page":"Massless Charged Particle","title":"GeometricProblems.MasslessChargedParticle.idaeproblem","text":"Creates an implicit DAE object for the massless charged particle in 2D.\n\n\n\n\n\n","category":"function"},{"location":"massless_charged_particle/#GeometricProblems.MasslessChargedParticle.idaeproblem_spark","page":"Massless Charged Particle","title":"GeometricProblems.MasslessChargedParticle.idaeproblem_spark","text":"Creates an implicit DAE object for the massless charged particle in 2D.\n\n\n\n\n\n","category":"function"},{"location":"massless_charged_particle/#GeometricProblems.MasslessChargedParticle.iodeproblem","page":"Massless Charged Particle","title":"GeometricProblems.MasslessChargedParticle.iodeproblem","text":"Creates an implicit ODE object for the massless charged particle in 2D.\n\n\n\n\n\n","category":"function"},{"location":"massless_charged_particle/#GeometricProblems.MasslessChargedParticle.odeproblem","page":"Massless Charged Particle","title":"GeometricProblems.MasslessChargedParticle.odeproblem","text":"Creates an ODE object for the massless charged particle in 2D.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_3d/#Lotka-Volterra-3d","page":"Lotka-Volterra 3d","title":"Lotka-Volterra 3d","text":"","category":"section"},{"location":"lotka_volterra_3d/","page":"Lotka-Volterra 3d","title":"Lotka-Volterra 3d","text":"GeometricProblems.LotkaVolterra3d","category":"page"},{"location":"lotka_volterra_3d/#GeometricProblems.LotkaVolterra3d","page":"Lotka-Volterra 3d","title":"GeometricProblems.LotkaVolterra3d","text":"Lotka-Volterra Model in 3D\n\nThe Lotka–Volterra model in 3D is an example of a Hamiltonian system with degenerate Poisson structure.\n\nThe equations read\n\nbeginaligned\ndotq_1 = q_1 (           -  a_2 q_2 + a_3 q_3 - b_2 + b_3 )  \ndotq_2 = q_2 ( hphantom- a_1 q_1 - a_3 q_3 + b_1 - b_3 )  \ndotq_3 = q_3 (           -  a_1 q_1 + a_2 q_2 - b_1 + b_2 )  \nendaligned\n\nwhich can be written in Poisson-form as\n\ndotq = P(q) nabla H(q) \n\nwith Poisson matrix\n\nP(q) = beginpmatrix\n            0  - q_1 q_2  hphantom- q_1 q_3 \nhphantom- q_1 q_2              0  - q_2 q_3 \n- q_1 q_3  hphantom- q_2 q_3  0             \nendpmatrix \n\nand Hamiltonian\n\nH(q) = a_1 q_1 + a_2 q_2 + a_3 q_3 + b_1 ln q_1 + b_2 ln q_2 + b_3 ln q_3 \n\nReferences:\n\nA. M. Perelomov. Selected topics on classical integrable systems, Troisième cycle de la physique, expanded version of lectures delivered in May 1995.\nYuri B. Suris. Integrable discretizations for lattice systems: local equations of motion and their Hamiltonian properties, Rev. Math. Phys. 11, pp. 727–822, 1999.\n\n\n\n\n\n","category":"module"},{"location":"lotka_volterra_3d/","page":"Lotka-Volterra 3d","title":"Lotka-Volterra 3d","text":"Modules = [GeometricProblems.LotkaVolterra3d]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"diagnostics/#Diagnostics","page":"Diagnostics","title":"Diagnostics","text":"","category":"section"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"Modules = [GeometricProblems.Diagnostics]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_error_drift-Union{Tuple{T}, Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.ScalarDataSeries{T}}, Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.ScalarDataSeries{T}, Any}} where T","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_error_drift","text":"Computes the drift in an invariant error.\n\nArguments: (t::TimeSeries, invariant_error::DataSeries{T,1}, interval_length=100)\n\nThe time series of the solution is split into intervals of interval_length time steps. In each interval, the maximum of the absolute value of the invariant error is determined. Returns a tuple of a TimeSeries that holds the centers of all intervals and a ScalarDataSeries that holds the maxima.\n\nThis is useful to detect drifts in invariants that are not preserved exactly but whose error is oscillating such as the energy error of Hamiltonian systems with symplectic integrators.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_invariant-Union{Tuple{T}, Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.DataSeries{T, AT} where AT<:Union{AbstractArray{T}, T}, GeometricSolutions.DataSeries{T, AT} where AT<:Union{AbstractArray{T}, T}, Union{Function, Type}}} where T","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_invariant","text":"Compute an invariant for the solution of a partitioned ODE or DAE system.\n\nArguments: (t::TimeSeries, q::DataSeries{T}, p::DataSeries{T}, invariant::Base.Callable)\n\nThe invariant functions needs to take three arguments (t,q,p) and return the  corresponding value of the invariant.\n\nReturns a ScalarDataSeries holding the time series of the invariant.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_invariant-Union{Tuple{T}, Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.DataSeries{T, AT} where AT<:Union{AbstractArray{T}, T}, Union{Function, Type}}} where T","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_invariant","text":"Compute an invariant for the solution of an ODE or DAE system.\n\nArguments: (t::TimeSeries, q::DataSeries{T}, invariant::Base.Callable)\n\nThe invariant functions needs to take two arguments (t,q) and return the  corresponding value of the invariant.\n\nReturns a ScalarDataSeries holding the time series of the invariant.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_invariant_error-Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.DataSeries, Union{Function, Type}}","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_invariant_error","text":"Compute the relative error of an invariant for the solution of an ODE or DAE system.\n\nArguments: (t::TimeSeries, q::DataSeries{T}, invariant::Base.Callable)\n\nThe invariant functions needs to take two arguments (t,q) and return the  corresponding value of the invariant.\n\nReturns a tuple of two 1d DataSeries holding the time series of the invariant and the relativ error, respectively.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_invariant_error-Union{Tuple{T}, Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.DataSeries{T, AT} where AT<:Union{AbstractArray{T}, T}, GeometricSolutions.DataSeries{T, AT} where AT<:Union{AbstractArray{T}, T}, Union{Function, Type}}} where T","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_invariant_error","text":"Compute the relative error of an invariant for the solution of a partitioned ODE or DAE system.\n\nArguments: (t::TimeSeries, q::DataSeries{T}, p::DataSeries{T}, invariant::Base.Callable)\n\nThe invariant functions needs to take three arguments (t,q,p) and return the  corresponding value of the invariant.\n\nReturns a tuple of two ScalarDataSeries holding the time series of the invariant and the relativ error, respectively.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_momentum_error-Union{Tuple{DT}, Tuple{GeometricSolutions.DataSeries{DT, AT} where AT<:Union{AbstractArray{DT}, DT}, GeometricSolutions.DataSeries{DT, AT} where AT<:Union{AbstractArray{DT}, DT}}} where DT","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_momentum_error","text":"Computes the difference of the momentum and the one-form of an implicit ODE or DAE system.\n\nArguments: (p::DataSeries{DT}, ϑ::DataSeries{DT})\n\nReturns a DataSeries similar to p holding the time series of the difference between p and ϑ.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_one_form-Tuple{GeometricSolutions.TimeSeries, GeometricSolutions.DataSeries, Union{Function, Type}}","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_one_form","text":"Compute the one-form (symplectic potential) for the solution of a Lagrangian system.\n\nArguments: (t::TimeSeries, q::DataSeries, one_form::Base.Callable)\n\nThe one_form function needs to take three arguments (t,q,k) where k is the index of the one-form component.\n\nReturns a DataSeries similar to q holding the time series of the one-form.\n\n\n\n\n\n","category":"method"},{"location":"diagnostics/#GeometricProblems.Diagnostics.compute_relative_error-Union{Tuple{GeometricSolutions.ScalarDataSeries{T}}, Tuple{T}} where T","page":"Diagnostics","title":"GeometricProblems.Diagnostics.compute_relative_error","text":"Takes a ScalarDataSeries holding an invariant and computes the relative error (inv(t)-inv(0))/inv(0).\n\nReturns a ScalarDataSeries similar to the argument holding the time series of the relativ errors.\n\n\n\n\n\n","category":"method"},{"location":"kepler_problem/#Kepler-Problem","page":"Kepler Problem","title":"Kepler Problem","text":"","category":"section"},{"location":"rigid_body/#The-rigid-body","page":"Rigid body","title":"The rigid body","text":"","category":"section"},{"location":"rigid_body/","page":"Rigid body","title":"Rigid body","text":"using GeometricProblems.RigidBody: odeensemble\nusing GeometricIntegrators: integrate, ImplicitMidpoint\nusing GeometricEquations: EnsembleProblem\nusing GeometricSolutions: GeometricSolution\nusing CairoMakie\n\nics = [\n        [sin(1.1), 0., cos(1.1)],\n        [sin(2.1), 0., cos(2.1)],\n        [sin(2.2), 0., cos(2.2)],\n        [0., sin(1.1), cos(1.1)],\n        [0., sin(1.5), cos(1.5)], \n        [0., sin(1.6), cos(1.6)]\n        ]\n\nensemble_problem = odeensemble(ics)\nensemble_solution = integrate(ensemble_problem, ImplicitMidpoint())\n\nfunction plot_geometric_solution!(p, solution::GeometricSolution; kwargs...)\n    lines!(p, solution.q[:, 1].parent, solution.q[:, 2].parent, solution.q[:, 3].parent; kwargs...)\nend\n\nfunction sphere(r, C)   # r: radius; C: center [cx,cy,cz]\n           n = 100\n           u = range(-π, π; length = n)\n           v = range(0, π; length = n)\n           x = C[1] .+ r * cos.(u) * sin.(v)'\n           y = C[2] .+ r * sin.(u) * sin.(v)'\n           z = C[3] .+ r * ones(n) * cos.(v)'\n           return x, y, z\n       end\n\nfig, ax, plt = surface(sphere(1., [0., 0., 0.])..., alpha = .6)\n\nfor (i, solution) in zip(1:length(ensemble_solution), ensemble_solution.s)\n    plot_geometric_solution!(ax, solution; label = \"trajectory \"*string(i), linewidth=2)\nend\n\nfig","category":"page"},{"location":"rigid_body/#Library-functions","page":"Rigid body","title":"Library functions","text":"","category":"section"},{"location":"rigid_body/","page":"Rigid body","title":"Rigid body","text":"GeometricProblems.RigidBody","category":"page"},{"location":"rigid_body/#GeometricProblems.RigidBody","page":"Rigid body","title":"GeometricProblems.RigidBody","text":"Rigid body\n\nbeginaligned\n    dotx = Ayz \n    doty = Bxz  \n    dotz = Cxy\nendaligned\n\nwhere A = (I_2 - I_3)(I_2I_3), B = (I_3 - I_1)(I_3I_1) and C = (I_1 - I_2)(I_1I_2); I_cdot are the principal components of inertia. \n\nThe initial condition and the default parameters are taken from [2].\n\n\n\n\n\n","category":"module"},{"location":"rigid_body/","page":"Rigid body","title":"Rigid body","text":"Modules = [GeometricProblems.RigidBody]\nOrder = [:constant, :type, :macro, :function]","category":"page"},{"location":"rigid_body/","page":"Rigid body","title":"Rigid body","text":"J. Bajārs. Locally-symplectic neural networks for learning volume-preserving dynamics. Journal of Computational Physics 476, 111911 (2023).\n\n\n\n","category":"page"},{"location":"pendulum/#Mathematical-Pendulum","page":"Mathematical Pendulum","title":"Mathematical Pendulum","text":"","category":"section"},{"location":"pendulum/","page":"Mathematical Pendulum","title":"Mathematical Pendulum","text":"Modules = [GeometricProblems.Pendulum]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"releasenotes/#Release-Notes","page":"Release Notes","title":"Release Notes","text":"","category":"section"},{"location":"releasenotes/#0.1.1","page":"Release Notes","title":"0.1.1","text":"","category":"section"},{"location":"releasenotes/#New-Features","page":"Release Notes","title":"New Features","text":"","category":"section"},{"location":"releasenotes/","page":"Release Notes","title":"Release Notes","text":"Poincaré invariants for Lotka-Volterra 2d model\nMore equation types for massless charged particle","category":"page"},{"location":"releasenotes/#Fixes","page":"Release Notes","title":"Fixes","text":"","category":"section"},{"location":"releasenotes/","page":"Release Notes","title":"Release Notes","text":"Fixes in general plot recipes","category":"page"},{"location":"releasenotes/#0.1.0","page":"Release Notes","title":"0.1.0","text":"","category":"section"},{"location":"releasenotes/","page":"Release Notes","title":"Release Notes","text":"Initial release with equations for","category":"page"},{"location":"releasenotes/","page":"Release Notes","title":"Release Notes","text":"Exponential Growth,\nLorenz Attractor in 3D,\nLotka-Volterra in 2D,\nLotka-Volterra in 3D,\nLotka-Volterra in 4D,\nMassless Charged Particle,\nHarmonic Oscillator,\nMathematical Pendulum,\nPlanar Point Vortices.","category":"page"},{"location":"nonlinear_oscillators/#Nonlinear-Oscillators","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"","category":"section"},{"location":"nonlinear_oscillators/#Duffing-Oscillator","page":"Nonlinear Oscillators","title":"Duffing Oscillator","text":"","category":"section"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"GeometricProblems.DuffingOscillator","category":"page"},{"location":"nonlinear_oscillators/#GeometricProblems.DuffingOscillator","page":"Nonlinear Oscillators","title":"GeometricProblems.DuffingOscillator","text":"\n\n\n\n","category":"module"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"Modules = [GeometricProblems.DuffingOscillator]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"nonlinear_oscillators/#Lennard-Jones-Oscillator","page":"Nonlinear Oscillators","title":"Lennard-Jones Oscillator","text":"","category":"section"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"GeometricProblems.LennardJonesOscillator","category":"page"},{"location":"nonlinear_oscillators/#GeometricProblems.LennardJonesOscillator","page":"Nonlinear Oscillators","title":"GeometricProblems.LennardJonesOscillator","text":"\n\n\n\n","category":"module"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"Modules = [GeometricProblems.LennardJonesOscillator]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"nonlinear_oscillators/#Mathews-Lakshmanan-Oscillator","page":"Nonlinear Oscillators","title":"Mathews-Lakshmanan Oscillator","text":"","category":"section"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"GeometricProblems.MathewsLakshmananOscillator","category":"page"},{"location":"nonlinear_oscillators/#GeometricProblems.MathewsLakshmananOscillator","page":"Nonlinear Oscillators","title":"GeometricProblems.MathewsLakshmananOscillator","text":"\n\n\n\n","category":"module"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"Modules = [GeometricProblems.MathewsLakshmananOscillator]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"nonlinear_oscillators/#Morse-Oscillator","page":"Nonlinear Oscillators","title":"Morse Oscillator","text":"","category":"section"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"GeometricProblems.MorseOscillator","category":"page"},{"location":"nonlinear_oscillators/#GeometricProblems.MorseOscillator","page":"Nonlinear Oscillators","title":"GeometricProblems.MorseOscillator","text":"\n\n\n\n","category":"module"},{"location":"nonlinear_oscillators/","page":"Nonlinear Oscillators","title":"Nonlinear Oscillators","text":"Modules = [GeometricProblems.MorseOscillator]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"henon_heiles/#Henon-Heiles-System","page":"Hénon-Heiles System","title":"Hénon-Heiles System","text":"","category":"section"},{"location":"lotka_volterra_2d/#Lotka-Volterra-2d","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"","category":"section"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"Lotka–Volterra models are used in mathematical biology for modelling population dynamics of animal species, as well as many other fields where predator-prey and similar models appear. The dynamics of the growth of two interacting species can be modelled by the following noncanonical Hamiltonian system","category":"page"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"dotq = beginpmatrix\nhphantom- 0  + q_1 q_2 \n- q_1 q_2  hphantom+ 0 \nendpmatrix\nnabla H (q) \nquad\nH (q) = a_1  q_1 + a_2  q_2 + b_1  log q_1 + b_2  log q_2 ","category":"page"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"using Plots\nusing GeometricIntegrators\nusing GeometricProblems.LotkaVolterra2d\nusing GeometricProblems.LotkaVolterra2dPlots\n\node = odeproblem()\nsol = integrate(ode, Gauss(1))\n\nplot_lotka_volterra_2d(sol, ode)\nsavefig(\"lotka_volterra_2d.svg\")\n\nnothing","category":"page"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"(Image: )","category":"page"},{"location":"lotka_volterra_2d/#Sub-models","page":"Lotka-Volterra 2d","title":"Sub-models","text":"","category":"section"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"The Euler-Lagrange equations of the Lotka-Volterra model can be obtained from different Lagrangians, which are connected by gauge transformations. Although they all lead to the same equations of motion, they lead to different variational integrators. Therefore different models based on different Lagrangians are implemented.","category":"page"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"GeometricProblems.LotkaVolterra2d","category":"page"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d","text":"Lotka-Volterra model in 2D\n\nbeginaligned\nL (q dotq) = bigg( q_2 + fraclog q_2q_1 bigg)  dotq_1 + q_1  dotq_2 - H(q)  \nH(q) = a_1  q_1 + a_2  q_2 + b_1  log q_1 + b_2  log q_2\nendaligned\n\n\n\n\n\n","category":"module"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"GeometricProblems.LotkaVolterra2dSymmetric","category":"page"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dSymmetric","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dSymmetric","text":"Lotka-Volterra model in 2D with symmetric Lagrangian\n\nbeginaligned\nL (q dotq) = frac12 fraclog q_2q_1  dotq_1 - frac12 fraclog q_1q_2  dotq_2 - H(q)  \nH(q) = a_1  q_1 + a_2  q_2 + b_1  log q_1 + b_2  log q_2\nendaligned\n\nThis Lagrangian is a slight generalization of Equation (5) in José Fernández-Núñez, Lagrangian Structure of the Two-Dimensional Lotka-Volterra System, International Journal of Theoretical Physics, Vol. 37, No. 9, pp. 2457-2462, 1998.\n\n\n\n\n\n","category":"module"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"GeometricProblems.LotkaVolterra2dSingular","category":"page"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dSingular","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dSingular","text":"Lotka-Volterra model in 2D with \"singular\" Lagrangian\n\nbeginaligned\nL (q dotq) = fraclog q_2q_1  dotq_1 - H(q)  \nH(q) = a_1  q_1 + a_2  q_2 + b_1  log q_1 + b_2  log q_2\nendaligned\n\nThis Lagrangian is equivalent to the Lagrangian of the symmetric Lotka-Volterra model. It differs only by a gauge transformation with the term - 12  d(log(q_1) log(q_2))dt. It leads to the same Euler-Lagrange equations but to a different variational integrator.\n\n\n\n\n\n","category":"module"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"GeometricProblems.LotkaVolterra2dGauge","category":"page"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dGauge","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dGauge","text":"Lotka-Volterra model in 2D with symmetric Lagrangian with gauge term\n\nbeginaligned\nL (q dotq) = bigg( q_2 + frac12 fraclog q_2q_1 bigg)  dotq_1 + bigg( q_1 - frac12 fraclog q_1q_2 bigg)  dotq_2 - H(q)  \nH(q) = a_1  q_1 + a_2  q_2 + b_1  log q_1 + b_2  log q_2\nendaligned\n\nThis Lagrangian is equivalent to the Lagrangian of the symmetric Lotka-Volterra model. It differs only by a gauge transformation with the term d(q_1 q_2)dt. It leads to the same Euler-Lagrange equations but to a different variational integrator.\n\n\n\n\n\n","category":"module"},{"location":"lotka_volterra_2d/#User-Functions","page":"Lotka-Volterra 2d","title":"User Functions","text":"","category":"section"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"Modules = [GeometricProblems.LotkaVolterra2d]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.daeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.daeproblem","text":"Creates a DAE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.hdaeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.hdaeproblem","text":"Creates a Hamiltonian DAE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.hodeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.hodeproblem","text":"Creates a Hamiltonian ODE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.idaeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.idaeproblem","text":"Creates an implicit DAE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.idaeproblem_spark","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.idaeproblem_spark","text":"Creates an implicit DAE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.iodeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.iodeproblem","text":"Creates an implicit ODE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.iodeproblem_dg","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.iodeproblem_dg","text":"Creates an implicit ODE object for the Lotka-Volterra 2D model for use with DG integrators.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.ldaeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.ldaeproblem","text":"Creates a variational DAE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.ldaeproblem_slrk","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.ldaeproblem_slrk","text":"Creates a variational DAE object for the Lotka-Volterra 2D model for use with SLRK integrators.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.lodeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.lodeproblem","text":"Creates a variational ODE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.odeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.odeproblem","text":"Creates an ODE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.pdaeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.pdaeproblem","text":"Creates a partitioned DAE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2d.podeproblem","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2d.podeproblem","text":"Creates a partitioned ODE object for the Lotka-Volterra 2D model.\n\n\n\n\n\n","category":"function"},{"location":"lotka_volterra_2d/#Plotting-Functions","page":"Lotka-Volterra 2d","title":"Plotting Functions","text":"","category":"section"},{"location":"lotka_volterra_2d/","page":"Lotka-Volterra 2d","title":"Lotka-Volterra 2d","text":"Modules = [GeometricProblems.LotkaVolterra2dPlots]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d!-Tuple","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d!","text":"Plots the solution of a 2D Lotka-Volterra model together with the energy error.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nxlims=:auto: xlims for solution plot\nylims=:auto: ylims for solution plot\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d!-Tuple{RecipesBase.AbstractPlot, Vararg{Any}}","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d!","text":"Plots the solution of a 2D Lotka-Volterra model together with the energy error.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nxlims=:auto: xlims for solution plot\nylims=:auto: ylims for solution plot\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d-Tuple","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d","text":"Plots the solution of a 2D Lotka-Volterra model together with the energy error.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nxlims=:auto: xlims for solution plot\nylims=:auto: ylims for solution plot\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_solution!-Tuple","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_solution!","text":"Plots the solution of a 2D Lotka-Volterra model.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nxlims=:auto: xlims for solution plot\nylims=:auto: ylims for solution plot\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_solution!-Tuple{RecipesBase.AbstractPlot, Vararg{Any}}","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_solution!","text":"Plots the solution of a 2D Lotka-Volterra model.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nxlims=:auto: xlims for solution plot\nylims=:auto: ylims for solution plot\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_solution-Tuple","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_solution","text":"Plots the solution of a 2D Lotka-Volterra model.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nxlims=:auto: xlims for solution plot\nylims=:auto: ylims for solution plot\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_traces!-Tuple","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_traces!","text":"Plots time traces of the solution of a 2D Lotka-Volterra model and its energy error.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_traces!-Tuple{RecipesBase.AbstractPlot, Vararg{Any}}","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_traces!","text":"Plots time traces of the solution of a 2D Lotka-Volterra model and its energy error.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"lotka_volterra_2d/#GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_traces-Tuple","page":"Lotka-Volterra 2d","title":"GeometricProblems.LotkaVolterra2dPlots.plot_lotka_volterra_2d_traces","text":"Plots time traces of the solution of a 2D Lotka-Volterra model and its energy error.\n\nArguments:\n\nsol <: GeometricSolution\nequ <: GeometricProblem\n\nKeyword aguments:\n\nnplot=1: plot every nplotth time step\nlatex=true: use LaTeX guides\n\n\n\n\n\n","category":"method"},{"location":"point_vortices/#Planar-Point-Vortices","page":"Point Vortices","title":"Planar Point Vortices","text":"","category":"section"},{"location":"point_vortices/","page":"Point Vortices","title":"Point Vortices","text":"Modules = [GeometricProblems.PointVortices]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"inner_solar_system/#Inner-Solar-System","page":"Inner Solar System","title":"Inner Solar System","text":"","category":"section"},{"location":"outer_solar_system/#Outer-Solar-System","page":"Outer Solar System","title":"Outer Solar System","text":"","category":"section"},{"location":"toda_lattice/#Toda-Lattice","page":"Toda Lattice","title":"Toda Lattice","text":"","category":"section"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"The Toda lattice is a prime example of an completely-integrable system, i.e. a Hamiltonian system evolving in mathbbR^2n that has n Poisson-commuting invariants of motion (see [3]). It is named after Morikazu Toda who used it to model a one-dimensional crystal [4].","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"The Hamiltonian of the Toda lattice takes the following form: ","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"    H(q p) = sum_ninmathbbZleft(  fracp_n^22 + alpha e^q_n - q_n+1 right)","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"In practice we work with a finite number of particles N and impose periodic boundary conditions: ","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"beginaligned\n    q_n+N   equiv q_n  \n    p_n+N    equiv p_n\nendaligned","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"Hence we have: ","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"    H(q p) = sum_n=1^N-1 left(  fracp_n^22 + alpha e^q_n - q_n+1 right) + fracp_N^22 + alpha e^q_N - q_1","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"We can model the evolution of a thin pulse in this system:","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"using GeometricProblems, GeometricIntegrators, Plots # hide\n\nproblem = GeometricProblems.TodaLattice.hodeproblem() \nsol = integrate(problem, ImplicitMidpoint())\n\ntime_steps = (0, 200, 400, 600, 800, 1000, 1200)\np = plot()\nfor time_step in time_steps\n    plot!(p, sol.q[time_step, :], label = \"t = $(sol.t[time_step])\")\nend\n\np","category":"page"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"As we can see the thin pulse separates into two smaller pulses an they start traveling in opposite directions until they meet again at time tapprox120. ","category":"page"},{"location":"toda_lattice/#Library-functions","page":"Toda Lattice","title":"Library functions","text":"","category":"section"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"GeometricProblems.TodaLattice","category":"page"},{"location":"toda_lattice/#GeometricProblems.TodaLattice","page":"Toda Lattice","title":"GeometricProblems.TodaLattice","text":"The Toda lattice is a model for a one-dimensional crystal named after its discoverer Morikazu Toda [4].\n\nIt is a prime example of a non-trivial completely integrable system.\n\nThe only system parameters are the number of points N in the periodic lattice and \\alpha which adjusts the strength of the interactions in the lattice.\n\n\n\n\n\n","category":"module"},{"location":"toda_lattice/","page":"Toda Lattice","title":"Toda Lattice","text":"V. I. Arnold. Mathematical methods of classical mechanics. Vol. 60 of Graduate Texts in Mathematics (Springer Verlag, Berlin, 1978).\n\n\n\nM. Toda. Vibration of a chain with nonlinear interaction. Journal of the Physical Society of Japan 22, 431–436 (1967).\n\n\n\n","category":"page"},{"location":"harmonic_oscillator/#Harmonic-Oscillator","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"harmonic_oscillator/","page":"Harmonic Oscillator","title":"Harmonic Oscillator","text":"Modules = [GeometricProblems.HarmonicOscillator]\nOrder   = [:constant, :type, :macro, :function]","category":"page"},{"location":"#GeometricProblems.jl","page":"Home","title":"GeometricProblems.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"GeometricProblems.jl is a collection of ODEs and DAEs with interesting geometric structures together with useful diagnostics and plotting tools.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: PkgEval Status) (Image: CI) (Image: Build Status) (Image: Coverage Status) (Image: codecov) (Image: DOI)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Typical structures are","category":"page"},{"location":"","page":"Home","title":"Home","text":"Variational structure, i.e., the equations can defined in terms of a Lagrangian function and be obtained from an action principle;\nHamiltonian structure, i.e., the equations can be defined in terms of a Hamiltonian function together with a symplectic or Poisson matrix;\nInvariants, i.e., the equations have symmetries and associated conservation laws;\nVolume preservation, i.e., the flow of the equations is divergence-free.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n\"diagnostics.md\",\n\"abc_flow.md\",\n\"coupled_harmonic_oscillator.md\",\n\"henon_heiles.md\",\n\"kepler_problem.md\",\n\"lorenz_attractor.md\",\n\"lotka_volterra_2d.md\",\n\"lotka_volterra_3d.md\",\n\"lotka_volterra_4d.md\",\n\"massless_charged_particle.md\",\n\"harmonic_oscillator.md\",\n\"nonlinear_oscillators.md\",\n\"pendulum.md\",\n\"double_pendulum.md\",\n\"point_vortices.md\",\n\"inner_solar_system.md\",\n\"outer_solar_system.md\",\n\"rigid_body.md\",\n\"toda_lattice.md\"\n]\nDepth = 1","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use the figures or implementations provided here, please consider citing GeometricIntegrators.jl as","category":"page"},{"location":"","page":"Home","title":"Home","text":"@misc{Kraus:2020:GeometricIntegratorsRepo,\n  title={GeometricIntegrators.jl: Geometric Numerical Integration in Julia},\n  author={Kraus, Michael},\n  year={2020},\n  howpublished={\\url{https://github.com/JuliaGNI/GeometricIntegrators.jl}},\n  doi={10.5281/zenodo.3648325}\n}","category":"page"},{"location":"","page":"Home","title":"Home","text":"as well as this repository as","category":"page"},{"location":"","page":"Home","title":"Home","text":"@misc{Kraus:2020:GeometricProblemsRepo,\n  title={GeometricProblems.jl: Collection of Differential Equations with Geometric Structure.},\n  author={Kraus, Michael},\n  year={2020},\n  howpublished={\\url{https://github.com/JuliaGNI/GeometricProblems.jl}},\n  doi={10.5281/zenodo.4285904}\n}","category":"page"},{"location":"#Figure-License","page":"Home","title":"Figure License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) Michael Kraus <michael.kraus@ipp.mpg.de>All figures are licensed under the Creative Commons CC BY-NC-SA 4.0 License.","category":"page"},{"location":"#Software-License","page":"Home","title":"Software License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) Michael Kraus <michael.kraus@ipp.mpg.de>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","category":"page"},{"location":"lorenz_attractor/#Lorenz-Attractor-in-3d","page":"Lorenz Attractor","title":"Lorenz Attractor in 3d","text":"","category":"section"},{"location":"lorenz_attractor/","page":"Lorenz Attractor","title":"Lorenz Attractor","text":"Modules = [GeometricProblems.LorenzAttractor]\nOrder   = [:constant, :type, :macro, :function]","category":"page"}]
}
